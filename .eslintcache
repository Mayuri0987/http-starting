[{"/home/sunbeam/ParamLogic/React/http-starting/src/index.js":"1","/home/sunbeam/ParamLogic/React/http-starting/src/reportWebVitals.js":"2","/home/sunbeam/ParamLogic/React/http-starting/src/App.js":"3","/home/sunbeam/ParamLogic/React/http-starting/src/containers/Blog/Blog.js":"4","/home/sunbeam/ParamLogic/React/http-starting/src/components/Post/Post.js":"5","/home/sunbeam/ParamLogic/React/http-starting/src/components/NewPost/NewPost.js":"6","/home/sunbeam/ParamLogic/React/http-starting/src/components/FullPost/FullPost.js":"7"},{"size":500,"mtime":1608004333215,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1608004333215,"results":"10","hashOfConfig":"9"},{"size":236,"mtime":1608004785246,"results":"11","hashOfConfig":"9"},{"size":1385,"mtime":1608011906273,"results":"12","hashOfConfig":"9"},{"size":283,"mtime":1608010711055,"results":"13","hashOfConfig":"9"},{"size":1021,"mtime":1508428519000,"results":"14","hashOfConfig":"9"},{"size":1149,"mtime":1608017612730,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"bmdsur",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sunbeam/ParamLogic/React/http-starting/src/index.js",[],["32","33"],"/home/sunbeam/ParamLogic/React/http-starting/src/reportWebVitals.js",[],"/home/sunbeam/ParamLogic/React/http-starting/src/App.js",[],"/home/sunbeam/ParamLogic/React/http-starting/src/containers/Blog/Blog.js",["34"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Post from \"../../components/Post/Post\";\nimport FullPost from \"../../components/FullPost/FullPost\";\nimport NewPost from \"../../components/NewPost/NewPost\";\nimport \"./Blog.css\";\nimport post from \"../../components/Post/Post\";\n\nclass Blog extends Component {\n  state = {\n    posts: [],\n    selectedPostId:null,\n  };\n  componentDidMount() {\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then((response) => {\n      const posts = response.data.slice(0, 4);\n      const updatedData = posts.map((post) => {\n        return {\n          ...post,\n          author: \"Mayuri\",\n        };\n      });\n\n      this.setState({ posts: updatedData });\n      // console.log(response);\n    });\n  }\n  postSelectedHandler = (id) => {\n      this.setState({selectedPostId:id})\n  };\n\n  render() {\n    const posts = this.state.posts.map((post) => {\n      return (\n        <Post\n          key={post.id}\n          title={post.title}\n          author={post.author}\n          clicked={() => this.postSelectedHandler(post.id)}\n        />\n      );\n    });\n    return (\n      <div>\n        <section className=\"Posts\">{posts}</section>\n        <section>\n          <FullPost id={this.state.selectedPostId} />\n        </section>\n        <section>\n          <NewPost />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Blog;\n","/home/sunbeam/ParamLogic/React/http-starting/src/components/Post/Post.js",[],"/home/sunbeam/ParamLogic/React/http-starting/src/components/NewPost/NewPost.js",[],"/home/sunbeam/ParamLogic/React/http-starting/src/components/FullPost/FullPost.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":7,"column":8,"nodeType":"41","messageId":"42","endLine":7,"endColumn":12},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'post' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]